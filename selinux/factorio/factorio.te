policy_module(factorio, 1.1.0)

########################################
#
# Declarations
#

type factorio_t;
type factorio_exec_t;
type factorio_tmp_t;
domain_type(factorio_t);


# You can uncomment this line and re-compile the module to debug permission issues.
#permissive factorio_t;


########################################
#
# factorio local policy
#

require {
		type unconfined_t;
		type ld_so_t;
		type tmp_t;
		type fs_t;
		role system_r;
		class filesystem { associate };
        class file { append create execute getattr ioctl lock open read rename setattr unlink write };
        class process { setcap entrypoint };
        class capability net_raw;
        class tcp_socket { connect create getattr getopt setopt };
        class fifo_file { getattr open read write };
        class rawip_socket { create getopt setopt };
        class netlink_route_socket { bind create getattr nlmsg_read write read };
        class udp_socket { bind connect create getattr setopt };
        class dir { getattr execute read search add_name };
}
role system_r types factorio_t;

#============= Auditing ==============
auditallow factorio_t factorio_exec_t:file { entrypoint }; # add auditing to init_domain()
auditallow factorio_t ld_so_t:file { entrypoint };
domain_entry_file(factorio_t, ld_so_t);

#============= unconfined_t ==============
# Allow relabeling from root/unconfined domain, you will need chcon permission or restorecon permission.
factorio_manage_file_dirs(unconfined_t);
factorio_relabel_file_dirs(unconfined_t);
factorio_domtrans(unconfined_t);
factorio_exec(unconfined_t);

#============= factorio_t ==============
fs_noxattr_type(factorio_exec_t);
fs_noxattr_type(factorio_t);

allow factorio_t self:unix_stream_socket create_stream_socket_perms;
allow factorio_t self:fifo_file manage_fifo_file_perms;

allow factorio_t tmp_t:dir { getattr execute read search add_name };
allow factorio_t factorio_tmp_t:dir manage_dir_perms;
allow factorio_t factorio_tmp_t:file manage_file_perms;
type_transition factorio_t tmp_t:file factorio_tmp_t;
type_transition factorio_t tmp_t:dir factorio_tmp_t;
type_transition factorio_t tmp_t:lnk_file factorio_tmp_t;
type_transition factorio_t tmp_t:sock_file factorio_tmp_t;

allow factorio_t fs_t:filesystem { associate }; # This is needed to "touch" the .pid and .fifo file. Found using "semodule --disable_dontaudit --build"
allow factorio_exec_t fs_t:filesystem { associate }; # For relabeling process in the install.

allow factorio_t factorio_exec_t:file manage_file_perms;
allow factorio_t self:dir manage_dir_perms;
allow factorio_t self:file manage_file_perms;
allow factorio_t self:capability net_raw;
allow factorio_t self:netlink_route_socket { bind create getattr nlmsg_read write read };
allow factorio_t self:process { setcap };
allow factorio_t self:rawip_socket { create getopt setopt };
allow factorio_t self:tcp_socket { connect create getattr getopt setopt read write };
allow factorio_t self:udp_socket { bind connect create getattr setopt read write };

corenet_tcp_connect_http_port(factorio_t);
corenet_udp_bind_generic_node(factorio_t);
miscfiles_read_localization(factorio_t);
kernel_read_system_state(factorio_t);
miscfiles_read_generic_certs(factorio_t);
sysnet_read_config(factorio_t); # Read network access such as resolver files for ping.


